name: Build OpenWrt

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
  schedule:
    - cron: 0 8 * * 4
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code && Update feeds
      run: |
        git clone https://github.com/coolsnowwolf/lede openwrt
        cd openwrt
        git clone https://github.com/KyleRicardo/MentoHUST-OpenWrt-ipk.git package/mentohust
        git clone https://github.com/BoringCat/luci-app-mentohust.git package/luci-app-mentohust
        git clone https://github.com/vernesong/OpenClash.git
        mv OpenClash/luci-app-openclash package/luci-app-openclash
        git clone https://github.com/Lienol/openwrt-package.git
        mv openwrt-package/lienol/smartdns-install package/smartdns-install
        git clone https://github.com/Mrbai98/luci-theme-atmaterial.git package/luci-theme-atmaterial
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e .config ] && mv .config openwrt
        chmod +x diy.sh
        cd openwrt
        ../diy.sh
        make defconfig
    - name: Download package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin